execute_pipeline:
    tasks = [
        @tasks.utils.set_seed,
        @tasks.load_data.load_dataset,
        @tasks.load_data.subsample_dataset_with_fixed_n,
        @tasks.models.save_upstream_embeddings,
        @tasks.load_data.process_classes,
        @tasks.load_data.get_dataloaders,
        @tasks.models.fit_model,
        @tasks.models.test_model,
    ]
    execution_order = 'sequential'

tasks.utils.set_seed.seed=%SEED

tasks.models.save_upstream_embeddings:
    saving_path = "/home/eernst/Voxceleb1/avg_embeddings"

train/torch.utils.data.DataLoader:
    shuffle=True
    batch_size=%TRAIN_BATCH_SIZE
    num_workers=%TRAIN_DATALOADER_NUM_WORKERS

val/torch.utils.data.DataLoader:
    shuffle=False
    batch_size=%VAL_BATCH_SIZE
    num_workers=%VAL_DATALOADER_NUM_WORKERS

test/torch.utils.data.DataLoader:
    shuffle=False
    batch_size=%TEST_BATCH_SIZE
    num_workers=%TEST_DATALOADER_NUM_WORKERS

torch.optim.Adam:
    lr=1e-4

torch.lr_scheduler.ReduceLROnPlateau:
    mode='min'
    patience=5
    factor=0.5

tasks.models.S3PRLUpstreamMLPDownstreamForCls:
    hidden_layers=1
    hidden_dim=4096
    optimizer=@torch.optim.Adam

tasks.models.fit_model:
    model_cls=@tasks.models.S3PRLUpstreamMLPDownstreamForCls
    trainer_cls=@pl.Trainer
    from_checkpoint=%INITIAL_CHECKPOINT

tasks.models.test_model:
    model_cls=@tasks.models.S3PRLUpstreamMLPDownstreamForCls
    trainer_cls=@pl.Trainer

pl.Trainer:
    logger=@pl.loggers.CSVLogger()
    devices=%DEVICE
    callbacks=[@pl.callbacks.ModelCheckpoint(), @pl.callbacks.LearningRateMonitor(), @pl.callbacks.EarlyStopping()]
    accelerator='gpu'
    accumulate_grad_batches=%GRAD_ACC
    num_sanity_val_steps=1
    precision=%PRECISION
    check_val_every_n_epoch=None

pl.callbacks.ModelCheckpoint:
    dirpath=%OUTPUT_DIR
    monitor="val_loss"
    mode="min"
    save_top_k=1
    every_n_epochs=1

pl.loggers.CSVLogger:
    save_dir=%OUTPUT_DIR
    name='pretrain_logs'

pl.callbacks.EarlyStopping:
    monitor="val_loss"
    min_delta=0.001
    patience=60
    verbose=True
    mode="min"